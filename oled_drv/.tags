!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BITBAND	.\sys.h	6;"	d
BIT_ADDR	.\sys.h	8;"	d
BMP1	.\bmp.h	/^unsigned char BMP1[] =$/;"	v
Brightness	.\oled.h	33;"	d
Delay_1ms	.\oled.c	/^void Delay_1ms(unsigned int Del_1ms)$/;"	f
Delay_50ms	.\oled.c	/^void Delay_50ms(unsigned int Del_50ms)$/;"	f
F6x8	.\oledfont.h	/^const unsigned char F6x8[][6] =		$/;"	v
F8X16	.\oledfont.h	/^const unsigned char F8X16[]=	  $/;"	v
GPIOA_IDR_Addr	.\sys.h	21;"	d
GPIOA_ODR_Addr	.\sys.h	11;"	d
GPIOB_IDR_Addr	.\sys.h	22;"	d
GPIOB_ODR_Addr	.\sys.h	12;"	d
GPIOC_IDR_Addr	.\sys.h	23;"	d
GPIOC_ODR_Addr	.\sys.h	13;"	d
GPIOD_IDR_Addr	.\sys.h	24;"	d
GPIOD_ODR_Addr	.\sys.h	14;"	d
GPIOE_IDR_Addr	.\sys.h	25;"	d
GPIOE_ODR_Addr	.\sys.h	15;"	d
GPIOF_IDR_Addr	.\sys.h	26;"	d
GPIOF_ODR_Addr	.\sys.h	16;"	d
GPIOG_IDR_Addr	.\sys.h	27;"	d
GPIOG_ODR_Addr	.\sys.h	17;"	d
GPIOH_IDR_Addr	.\sys.h	28;"	d
GPIOH_ODR_Addr	.\sys.h	18;"	d
GPIOI_IDR_Addr	.\sys.h	29;"	d
GPIOI_ODR_Addr	.\sys.h	19;"	d
GPIO_InitStructure	.\main.c	/^static GPIO_InitTypeDef 		GPIO_InitStructure;$/;"	v	file:
GPIO_InitStructure	.\oled.c	/^static GPIO_InitTypeDef 		GPIO_InitStructure;$/;"	v	file:
Hzk	.\oledfont.h	/^char Hzk[][32]={$/;"	v
IIC_Start	.\oled.c	/^void IIC_Start(void)$/;"	f
IIC_Stop	.\oled.c	/^void IIC_Stop(void)$/;"	f
IIC_Wait_Ack	.\oled.c	/^uint8_t IIC_Wait_Ack(void)$/;"	f
MEM_ADDR	.\sys.h	7;"	d
Max_Column	.\oled.h	31;"	d
Max_Row	.\oled.h	32;"	d
NVIC_InitStructure	.\main.c	/^static NVIC_InitTypeDef 		NVIC_InitStructure;$/;"	v	file:
OLED_CMD	.\oled.h	45;"	d
OLED_Clear	.\oled.c	/^void OLED_Clear(void)  $/;"	f
OLED_DATA	.\oled.h	46;"	d
OLED_Display_Off	.\oled.c	/^void OLED_Display_Off(void)$/;"	f
OLED_Display_On	.\oled.c	/^void OLED_Display_On(void)$/;"	f
OLED_DrawBMP	.\oled.c	/^void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[])$/;"	f
OLED_Init	.\oled.c	/^void OLED_Init(void)$/;"	f
OLED_MODE	.\oled.h	27;"	d
OLED_On	.\oled.c	/^void OLED_On(void)  $/;"	f
OLED_SCLK_Clr	.\oled.h	38;"	d
OLED_SCLK_Set	.\oled.h	39;"	d
OLED_SDIN_Clr	.\oled.h	41;"	d
OLED_SDIN_Set	.\oled.h	42;"	d
OLED_Set_Pos	.\oled.c	/^	void OLED_Set_Pos(unsigned char x, unsigned char y) $/;"	f
OLED_ShowCHinese	.\oled.c	/^void OLED_ShowCHinese(u8 x,u8 y,u8 no)$/;"	f
OLED_ShowChar	.\oled.c	/^void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)$/;"	f
OLED_ShowNum	.\oled.c	/^void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)$/;"	f
OLED_ShowString	.\oled.c	/^void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size)$/;"	f
OLED_WR_Byte	.\oled.c	/^void OLED_WR_Byte(unsigned dat,unsigned cmd)$/;"	f
PAin	.\sys.h	34;"	d
PAout	.\sys.h	33;"	d
PBin	.\sys.h	37;"	d
PBout	.\sys.h	36;"	d
PCin	.\sys.h	40;"	d
PCout	.\sys.h	39;"	d
PDin	.\sys.h	43;"	d
PDout	.\sys.h	42;"	d
PEin	.\sys.h	46;"	d
PEout	.\sys.h	45;"	d
PFin	.\sys.h	49;"	d
PFout	.\sys.h	48;"	d
PGin	.\sys.h	52;"	d
PGout	.\sys.h	51;"	d
PHin	.\sys.h	55;"	d
PHout	.\sys.h	54;"	d
PIin	.\sys.h	58;"	d
PIout	.\sys.h	57;"	d
SCL_W	.\oled.c	30;"	d	file:
SDA_R	.\oled.c	32;"	d	file:
SDA_W	.\oled.c	31;"	d	file:
SIZE	.\oled.h	28;"	d
USART1_IRQHandler	.\main.c	/^void USART1_IRQHandler(void)$/;"	f
USART_InitStructure	.\main.c	/^static USART_InitTypeDef 		USART_InitStructure;$/;"	v	file:
Write_IIC_Byte	.\oled.c	/^void Write_IIC_Byte(unsigned char IIC_Byte)$/;"	f
Write_IIC_Command	.\oled.c	/^void Write_IIC_Command(unsigned char IIC_Command)$/;"	f
Write_IIC_Data	.\oled.c	/^void Write_IIC_Data(unsigned char IIC_Data)$/;"	f
XLevelH	.\oled.h	30;"	d
XLevelL	.\oled.h	29;"	d
X_WIDTH	.\oled.h	34;"	d
Y_WIDTH	.\oled.h	35;"	d
__BMP_H	.\bmp.h	9;"	d
__FILE	.\main.c	/^struct __FILE { int handle; \/* Add whatever you need here *\/ };$/;"	s	file:
__OLEDFONT_H	.\oledfont.h	2;"	d
__OLED_H	.\oled.h	23;"	d
__SYS_H__	.\sys.h	2;"	d
__stdin	.\main.c	/^FILE __stdin;$/;"	v
__stdout	.\main.c	/^FILE __stdout;$/;"	v
_sys_exit	.\main.c	/^void _sys_exit(int return_code) {$/;"	f
delay_ms	.\main.c	/^void delay_ms(uint32_t n)$/;"	f
delay_us	.\main.c	/^void delay_us(uint32_t n)$/;"	f
fill_picture	.\oled.c	/^void fill_picture(unsigned char fill_Data)$/;"	f
fputc	.\main.c	/^int fputc(int ch, FILE *f) {$/;"	f
handle	.\main.c	/^struct __FILE { int handle; \/* Add whatever you need here *\/ };$/;"	m	struct:__FILE	file:
main	.\main.c	/^int main(void)$/;"	f
myoled_exit	.\oled_drv.c	/^module_exit(myoled_exit);$/;"	v
myoled_exit	.\oled_drv.c	/^static void __exit myoled_exit(void)$/;"	f	file:
myoled_init	.\oled_drv.c	/^module_init(myoled_init);$/;"	v
myoled_init	.\oled_drv.c	/^static int __init myoled_init(void)$/;"	f	file:
oled_close	.\oled_drv.c	/^int oled_close (struct inode * inode, struct file *file)$/;"	f
oled_fops	.\oled_drv.c	/^struct file_operations oled_fops={$/;"	v	typeref:struct:file_operations
oled_gpios	.\oled_drv.c	/^static struct gpio oled_gpios[] ={$/;"	v	typeref:struct:gpio	file:
oled_miscdev	.\oled_drv.c	/^static struct miscdevice oled_miscdev = {$/;"	v	typeref:struct:miscdevice	file:
oled_open	.\oled_drv.c	/^int oled_open (struct inode * inode, struct file *file)$/;"	f
oled_pow	.\oled.c	/^u32 oled_pow(u8 m,u8 n)$/;"	f
oled_read	.\oled_drv.c	/^ssize_t oled_read (struct file *file, char __user *buf, size_t len, loff_t * offs)$/;"	f
oled_write	.\oled_drv.c	/^ssize_t oled_write (struct file *file,const char __user *buf, size_t len, loff_t *offset)$/;"	f
sda_pin_mode	.\oled.c	/^void sda_pin_mode(GPIOMode_TypeDef pin_mode)$/;"	f
usart1_init	.\main.c	/^void usart1_init(uint32_t baud)$/;"	f
